// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`VideoIntro unit testing shoudl match snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <VideoIntro />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <section
        id="video-container"
      >
        <video
          autoplay=""
          loop=""
        >
          <source
            src="goalscardcontainerhero.mp4"
            type="video/mp4"
          />
        </video>
        <a
          href="/landingpage"
        >
          <button
            id="skip-button"
          >
            Skip Intro
          </button>
        </a>
      </section>,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <video
            autoPlay={true}
            loop={true}
            muted={true}
          >
            <source
              src="goalscardcontainerhero.mp4"
              type="video/mp4"
            />
          </video>,
          <Link
            replace={false}
            to="/landingpage"
          >
            <button
              id="skip-button"
            >
              Skip Intro
            </button>
          </Link>,
        ],
        "id": "video-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <video
            autoplay=""
            loop=""
          >
            <source
              src="goalscardcontainerhero.mp4"
              type="video/mp4"
            />
          </video>,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "autoPlay": true,
            "children": <source
              src="goalscardcontainerhero.mp4"
              type="video/mp4"
            />,
            "loop": true,
            "muted": true,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <source
                src="goalscardcontainerhero.mp4"
                type="video/mp4"
              />,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "src": "goalscardcontainerhero.mp4",
                "type": "video/mp4",
              },
              "ref": null,
              "rendered": Array [
                undefined,
              ],
              "type": "source",
            },
          ],
          "type": "video",
        },
        Object {
          "instance": Link {
            "__reactInternalMemoizedMaskedChildContext": Object {
              "router": Object {
                "history": Object {
                  "_listeners": Array [],
                  "_notifyListeners": [Function],
                  "action": "POP",
                  "createHref": [Function],
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
                "staticContext": undefined,
              },
            },
            "__reactInternalMemoizedUnmaskedChildContext": Object {
              "router": Object {
                "history": Object {
                  "_listeners": Array [],
                  "_notifyListeners": [Function],
                  "action": "POP",
                  "createHref": [Function],
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
                "staticContext": undefined,
              },
            },
            "_reactInternalFiber": FiberNode {
              "_debugID": 27,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": FiberNode {
                "_debugID": 24,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 23,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "firstEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "mount": true,
                    "props": Object {},
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 21,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 1,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "callbackList": null,
                        "first": Object {
                          "callback": null,
                          "isForced": false,
                          "isReplace": false,
                          "isTopLevelUnmount": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "priorityLevel": 1,
                        },
                        "hasForceUpdate": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "isForced": false,
                          "isReplace": false,
                          "isTopLevelUnmount": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "priorityLevel": 1,
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          }
                        }
                        props={Object {}}
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "isScheduled": false,
                      "nextScheduledRoot": null,
                      "pendingContext": null,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 25,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 7,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 26,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 28,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "src": "goalscardcontainerhero.mp4",
                        "type": "video/mp4",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "tag": 5,
                      "type": "source",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "autoPlay": true,
                      "children": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "loop": true,
                      "muted": true,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>,
                    "tag": 5,
                    "type": "video",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <video
                        autoPlay={true}
                        loop={true}
                        muted={true}
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      <Link
                        replace={false}
                        to="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </Link>,
                    ],
                    "id": "video-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <section
                    id="video-container"
                  >
                    <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>
                    <a
                      href="/landingpage"
                    >
                      <button
                        id="skip-button"
                      >
                        Skip Intro
                      </button>
                    </a>
                  </section>,
                  "tag": 5,
                  "type": "section",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "firstEffect": FiberNode {
                  "_debugID": 25,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 7,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 26,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 28,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "src": "goalscardcontainerhero.mp4",
                        "type": "video/mp4",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "tag": 5,
                      "type": "source",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "autoPlay": true,
                      "children": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "loop": true,
                      "muted": true,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>,
                    "tag": 5,
                    "type": "video",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <video
                        autoPlay={true}
                        loop={true}
                        muted={true}
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      <Link
                        replace={false}
                        to="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </Link>,
                    ],
                    "id": "video-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <section
                    id="video-container"
                  >
                    <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>
                    <a
                      href="/landingpage"
                    >
                      <button
                        id="skip-button"
                      >
                        Skip Intro
                      </button>
                    </a>
                  </section>,
                  "tag": 5,
                  "type": "section",
                  "updateQueue": null,
                },
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": FiberNode {
                  "_debugID": 25,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 7,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 26,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 28,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "src": "goalscardcontainerhero.mp4",
                        "type": "video/mp4",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "tag": 5,
                      "type": "source",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "autoPlay": true,
                      "children": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "loop": true,
                      "muted": true,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>,
                    "tag": 5,
                    "type": "video",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <video
                        autoPlay={true}
                        loop={true}
                        muted={true}
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      <Link
                        replace={false}
                        to="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </Link>,
                    ],
                    "id": "video-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <section
                    id="video-container"
                  >
                    <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>
                    <a
                      href="/landingpage"
                    >
                      <button
                        id="skip-button"
                      >
                        Skip Intro
                      </button>
                    </a>
                  </section>,
                  "tag": 5,
                  "type": "section",
                  "updateQueue": null,
                },
                "memoizedProps": Object {},
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 23,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "firstEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "memoizedProps": Object {
                    "Component": [Function],
                    "context": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "props": Object {},
                  },
                  "memoizedState": Object {
                    "context": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "mount": true,
                    "props": Object {},
                  },
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 21,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": [Circular],
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": null,
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 1,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": Object {
                        "callbackList": null,
                        "first": Object {
                          "callback": null,
                          "isForced": false,
                          "isReplace": false,
                          "isTopLevelUnmount": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "priorityLevel": 1,
                        },
                        "hasForceUpdate": false,
                        "isProcessing": false,
                        "last": Object {
                          "callback": null,
                          "isForced": false,
                          "isReplace": false,
                          "isTopLevelUnmount": false,
                          "next": null,
                          "partialState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "priorityLevel": 1,
                        },
                      },
                    },
                    "child": [Circular],
                    "effectTag": 0,
                    "firstEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "memoizedProps": null,
                    "memoizedState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          }
                        }
                        props={Object {}}
                      />,
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": null,
                    "sibling": null,
                    "stateNode": Object {
                      "containerInfo": <div>
                        <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>
                      </div>,
                      "context": Object {},
                      "current": [Circular],
                      "isScheduled": false,
                      "nextScheduledRoot": null,
                      "pendingContext": null,
                    },
                    "tag": 3,
                    "type": null,
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": WrapperComponent {
                    "__reactInternalMemoizedMergedChildContext": Object {
                      "router": Object {
                        "history": Object {
                          "_listeners": Array [],
                          "_notifyListeners": [Function],
                          "action": "POP",
                          "createHref": [Function],
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "route": Object {
                          "location": Object {
                            "hash": "",
                            "key": "5ji4pj",
                            "pathname": "/",
                            "search": "",
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                        },
                        "staticContext": undefined,
                      },
                    },
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "refs": Object {},
                    "state": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 2,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": null,
                "tag": 1,
                "type": [Function],
                "updateQueue": null,
              },
              "_debugSource": Object {
                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                "lineNumber": 13,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 29,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 30,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "firstEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 14,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Skip Intro",
                    "id": "skip-button",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <button
                    id="skip-button"
                  >
                    Skip Intro
                  </button>,
                  "tag": 5,
                  "type": "button",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <button
                    id="skip-button"
                  >
                    Skip Intro
                  </button>,
                  "href": "/landingpage",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": <a
                  href="/landingpage"
                >
                  <button
                    id="skip-button"
                  >
                    Skip Intro
                  </button>
                </a>,
                "tag": 5,
                "type": "a",
                "updateQueue": null,
              },
              "effectTag": 1,
              "firstEffect": null,
              "index": 1,
              "internalContextTag": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <button
                  id="skip-button"
                >
                  Skip Intro
                </button>,
                "replace": false,
                "to": "/landingpage",
              },
              "memoizedState": null,
              "nextEffect": null,
              "pendingProps": null,
              "pendingWorkPriority": 0,
              "ref": null,
              "return": FiberNode {
                "_debugID": 25,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 24,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                  "lineNumber": 7,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 26,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 8,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 28,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 24,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 9,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "src": "goalscardcontainerhero.mp4",
                      "type": "video/mp4",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <source
                      src="goalscardcontainerhero.mp4"
                      type="video/mp4"
                    />,
                    "tag": 5,
                    "type": "source",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "autoPlay": true,
                    "children": <source
                      src="goalscardcontainerhero.mp4"
                      type="video/mp4"
                    />,
                    "loop": true,
                    "muted": true,
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": [Circular],
                  "stateNode": <video
                    autoplay=""
                    loop=""
                  >
                    <source
                      src="goalscardcontainerhero.mp4"
                      type="video/mp4"
                    />
                  </video>,
                  "tag": 5,
                  "type": "video",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "firstEffect": null,
                "index": 0,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <video
                      autoPlay={true}
                      loop={true}
                      muted={true}
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>,
                    <Link
                      replace={false}
                      to="/landingpage"
                    >
                      <button
                        id="skip-button"
                      >
                        Skip Intro
                      </button>
                    </Link>,
                  ],
                  "id": "video-container",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 24,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": [Circular],
                  "effectTag": 1,
                  "firstEffect": [Circular],
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": <section
                  id="video-container"
                >
                  <video
                    autoplay=""
                    loop=""
                  >
                    <source
                      src="goalscardcontainerhero.mp4"
                      type="video/mp4"
                    />
                  </video>
                  <a
                    href="/landingpage"
                  >
                    <button
                      id="skip-button"
                    >
                      Skip Intro
                    </button>
                  </a>
                </section>,
                "tag": 5,
                "type": "section",
                "updateQueue": null,
              },
              "sibling": null,
              "stateNode": [Circular],
              "tag": 2,
              "type": [Function],
              "updateQueue": null,
            },
            "_reactInternalInstance": Object {},
            "context": Object {
              "router": Object {
                "history": Object {
                  "_listeners": Array [],
                  "_notifyListeners": [Function],
                  "action": "POP",
                  "createHref": [Function],
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "route": Object {
                  "location": Object {
                    "hash": "",
                    "key": "5ji4pj",
                    "pathname": "/",
                    "search": "",
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                },
                "staticContext": undefined,
              },
            },
            "handleClick": [Function],
            "props": Object {
              "children": <button
                id="skip-button"
              >
                Skip Intro
              </button>,
              "replace": false,
              "to": "/landingpage",
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": null,
          "nodeType": "class",
          "props": Object {
            "children": <button
              id="skip-button"
            >
              Skip Intro
            </button>,
            "replace": false,
            "to": "/landingpage",
          },
          "ref": null,
          "rendered": Object {
            "instance": <a
              href="/landingpage"
            >
              <button
                id="skip-button"
              >
                Skip Intro
              </button>
            </a>,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": <button
                id="skip-button"
              >
                Skip Intro
              </button>,
              "href": "/landingpage",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <button
                  id="skip-button"
                >
                  Skip Intro
                </button>,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Skip Intro",
                  "id": "skip-button",
                },
                "ref": null,
                "rendered": Array [
                  "Skip Intro",
                ],
                "type": "button",
              },
            ],
            "type": "a",
          },
          "type": [Function],
        },
      ],
      "type": "section",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <section
          id="video-container"
        >
          <video
            autoplay=""
            loop=""
          >
            <source
              src="goalscardcontainerhero.mp4"
              type="video/mp4"
            />
          </video>
          <a
            href="/landingpage"
          >
            <button
              id="skip-button"
            >
              Skip Intro
            </button>
          </a>
        </section>,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <video
              autoPlay={true}
              loop={true}
              muted={true}
            >
              <source
                src="goalscardcontainerhero.mp4"
                type="video/mp4"
              />
            </video>,
            <Link
              replace={false}
              to="/landingpage"
            >
              <button
                id="skip-button"
              >
                Skip Intro
              </button>
            </Link>,
          ],
          "id": "video-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <video
              autoplay=""
              loop=""
            >
              <source
                src="goalscardcontainerhero.mp4"
                type="video/mp4"
              />
            </video>,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "autoPlay": true,
              "children": <source
                src="goalscardcontainerhero.mp4"
                type="video/mp4"
              />,
              "loop": true,
              "muted": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <source
                  src="goalscardcontainerhero.mp4"
                  type="video/mp4"
                />,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "src": "goalscardcontainerhero.mp4",
                  "type": "video/mp4",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": "source",
              },
            ],
            "type": "video",
          },
          Object {
            "instance": Link {
              "__reactInternalMemoizedMaskedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "_listeners": Array [],
                    "_notifyListeners": [Function],
                    "action": "POP",
                    "createHref": [Function],
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                  "staticContext": undefined,
                },
              },
              "__reactInternalMemoizedUnmaskedChildContext": Object {
                "router": Object {
                  "history": Object {
                    "_listeners": Array [],
                    "_notifyListeners": [Function],
                    "action": "POP",
                    "createHref": [Function],
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                  "staticContext": undefined,
                },
              },
              "_reactInternalFiber": FiberNode {
                "_debugID": 27,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": FiberNode {
                  "_debugID": 24,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "firstEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": FiberNode {
                    "_debugID": 25,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 7,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 26,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 8,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 28,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 9,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "src": "goalscardcontainerhero.mp4",
                          "type": "video/mp4",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "tag": 5,
                        "type": "source",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "autoPlay": true,
                        "children": <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />,
                        "loop": true,
                        "muted": true,
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": [Circular],
                      "stateNode": <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      "tag": 5,
                      "type": "video",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <video
                          autoPlay={true}
                          loop={true}
                          muted={true}
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        <Link
                          replace={false}
                          to="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </Link>,
                      ],
                      "id": "video-container",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <section
                      id="video-container"
                    >
                      <video
                        autoplay=""
                        loop=""
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>
                      <a
                        href="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </a>
                    </section>,
                    "tag": 5,
                    "type": "section",
                    "updateQueue": null,
                  },
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 23,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 7,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 8,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 28,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 9,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "src": "goalscardcontainerhero.mp4",
                            "type": "video/mp4",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "tag": 5,
                          "type": "source",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "autoPlay": true,
                          "children": <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />,
                          "loop": true,
                          "muted": true,
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": [Circular],
                        "stateNode": <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>,
                        "tag": 5,
                        "type": "video",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <video
                            autoPlay={true}
                            loop={true}
                            muted={true}
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          <Link
                            replace={false}
                            to="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </Link>,
                        ],
                        "id": "video-container",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <section
                        id="video-container"
                      >
                        <video
                          autoplay=""
                          loop=""
                        >
                          <source
                            src="goalscardcontainerhero.mp4"
                            type="video/mp4"
                          />
                        </video>
                        <a
                          href="/landingpage"
                        >
                          <button
                            id="skip-button"
                          >
                            Skip Intro
                          </button>
                        </a>
                      </section>,
                      "tag": 5,
                      "type": "section",
                      "updateQueue": null,
                    },
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "props": Object {},
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "mount": true,
                      "props": Object {},
                    },
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 21,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": [Circular],
                        "child": null,
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 1,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": Object {
                          "callbackList": null,
                          "first": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                          "hasForceUpdate": false,
                          "isProcessing": false,
                          "last": Object {
                            "callback": null,
                            "isForced": false,
                            "isReplace": false,
                            "isTopLevelUnmount": false,
                            "next": null,
                            "partialState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "priorityLevel": 1,
                          },
                        },
                      },
                      "child": [Circular],
                      "effectTag": 0,
                      "firstEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            }
                          }
                          props={Object {}}
                        />,
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": null,
                      "sibling": null,
                      "stateNode": Object {
                        "containerInfo": <div>
                          <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>
                        </div>,
                        "context": Object {},
                        "current": [Circular],
                        "isScheduled": false,
                        "nextScheduledRoot": null,
                        "pendingContext": null,
                      },
                      "tag": 3,
                      "type": null,
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "router": Object {
                          "history": Object {
                            "_listeners": Array [],
                            "_notifyListeners": [Function],
                            "action": "POP",
                            "createHref": [Function],
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "route": Object {
                            "location": Object {
                              "hash": "",
                              "key": "5ji4pj",
                              "pathname": "/",
                              "search": "",
                            },
                            "match": Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            },
                          },
                          "staticContext": undefined,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 2,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "type": [Function],
                  "updateQueue": null,
                },
                "_debugSource": Object {
                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                  "lineNumber": 13,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 29,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 30,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 24,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": FiberNode {
                            "_debugID": 25,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 7,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 26,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 8,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 28,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                  "lineNumber": 9,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "src": "goalscardcontainerhero.mp4",
                                  "type": "video/mp4",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "tag": 5,
                                "type": "source",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "autoPlay": true,
                                "children": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "loop": true,
                                "muted": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": [Circular],
                              "stateNode": <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              "tag": 5,
                              "type": "video",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <video
                                  autoPlay={true}
                                  loop={true}
                                  muted={true}
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>,
                                <Link
                                  replace={false}
                                  to="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </Link>,
                              ],
                              "id": "video-container",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>,
                            "tag": 5,
                            "type": "section",
                            "updateQueue": null,
                          },
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": FiberNode {
                            "_debugID": 25,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 7,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 26,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 8,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 28,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                  "lineNumber": 9,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "src": "goalscardcontainerhero.mp4",
                                  "type": "video/mp4",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "tag": 5,
                                "type": "source",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "autoPlay": true,
                                "children": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "loop": true,
                                "muted": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": [Circular],
                              "stateNode": <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              "tag": 5,
                              "type": "video",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <video
                                  autoPlay={true}
                                  loop={true}
                                  muted={true}
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>,
                                <Link
                                  replace={false}
                                  to="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </Link>,
                              ],
                              "id": "video-container",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>,
                            "tag": 5,
                            "type": "section",
                            "updateQueue": null,
                          },
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "effectTag": 1,
                      "firstEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 28,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "src": "goalscardcontainerhero.mp4",
                              "type": "video/mp4",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "tag": 5,
                            "type": "source",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "autoPlay": true,
                            "children": <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />,
                            "loop": true,
                            "muted": true,
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": [Circular],
                          "stateNode": <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>,
                          "tag": 5,
                          "type": "video",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "firstEffect": null,
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <video
                              autoPlay={true}
                              loop={true}
                              muted={true}
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            <Link
                              replace={false}
                              to="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </Link>,
                          ],
                          "id": "video-container",
                        },
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": [Circular],
                        "sibling": null,
                        "stateNode": <section
                          id="video-container"
                        >
                          <video
                            autoplay=""
                            loop=""
                          >
                            <source
                              src="goalscardcontainerhero.mp4"
                              type="video/mp4"
                            />
                          </video>
                          <a
                            href="/landingpage"
                          >
                            <button
                              id="skip-button"
                            >
                              Skip Intro
                            </button>
                          </a>
                        </section>,
                        "tag": 5,
                        "type": "section",
                        "updateQueue": null,
                      },
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": FiberNode {
                          "_debugID": 25,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 26,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 28,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "src": "goalscardcontainerhero.mp4",
                                "type": "video/mp4",
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": null,
                              "stateNode": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "tag": 5,
                              "type": "source",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "autoPlay": true,
                              "children": <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />,
                              "loop": true,
                              "muted": true,
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": [Circular],
                            "stateNode": <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>,
                            "tag": 5,
                            "type": "video",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <video
                                autoPlay={true}
                                loop={true}
                                muted={true}
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              <Link
                                replace={false}
                                to="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </Link>,
                            ],
                            "id": "video-container",
                          },
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": [Circular],
                          "sibling": null,
                          "stateNode": <section
                            id="video-container"
                          >
                            <video
                              autoplay=""
                              loop=""
                            >
                              <source
                                src="goalscardcontainerhero.mp4"
                                type="video/mp4"
                              />
                            </video>
                            <a
                              href="/landingpage"
                            >
                              <button
                                id="skip-button"
                              >
                                Skip Intro
                              </button>
                            </a>
                          </section>,
                          "tag": 5,
                          "type": "section",
                          "updateQueue": null,
                        },
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": FiberNode {
                            "_debugID": 25,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 7,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 26,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 8,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 28,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                  "lineNumber": 9,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "src": "goalscardcontainerhero.mp4",
                                  "type": "video/mp4",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "tag": 5,
                                "type": "source",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "autoPlay": true,
                                "children": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "loop": true,
                                "muted": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": [Circular],
                              "stateNode": <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              "tag": 5,
                              "type": "video",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <video
                                  autoPlay={true}
                                  loop={true}
                                  muted={true}
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>,
                                <Link
                                  replace={false}
                                  to="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </Link>,
                              ],
                              "id": "video-container",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>,
                            "tag": 5,
                            "type": "section",
                            "updateQueue": null,
                          },
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": FiberNode {
                            "_debugID": 25,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                              "lineNumber": 7,
                            },
                            "alternate": null,
                            "child": FiberNode {
                              "_debugID": 26,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                "lineNumber": 8,
                              },
                              "alternate": null,
                              "child": FiberNode {
                                "_debugID": 28,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                                  "lineNumber": 9,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "firstEffect": null,
                                "index": 0,
                                "internalContextTag": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "src": "goalscardcontainerhero.mp4",
                                  "type": "video/mp4",
                                },
                                "memoizedState": null,
                                "nextEffect": null,
                                "pendingProps": null,
                                "pendingWorkPriority": 0,
                                "ref": null,
                                "return": [Circular],
                                "sibling": null,
                                "stateNode": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "tag": 5,
                                "type": "source",
                                "updateQueue": null,
                              },
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "autoPlay": true,
                                "children": <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />,
                                "loop": true,
                                "muted": true,
                              },
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 0,
                              "ref": null,
                              "return": [Circular],
                              "sibling": [Circular],
                              "stateNode": <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>,
                              "tag": 5,
                              "type": "video",
                              "updateQueue": null,
                            },
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": Array [
                                <video
                                  autoPlay={true}
                                  loop={true}
                                  muted={true}
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>,
                                <Link
                                  replace={false}
                                  to="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </Link>,
                              ],
                              "id": "video-container",
                            },
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": [Circular],
                            "sibling": null,
                            "stateNode": <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>,
                            "tag": 5,
                            "type": "section",
                            "updateQueue": null,
                          },
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 14,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Skip Intro",
                      "id": "skip-button",
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": null,
                    "stateNode": <button
                      id="skip-button"
                    >
                      Skip Intro
                    </button>,
                    "tag": 5,
                    "type": "button",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <button
                      id="skip-button"
                    >
                      Skip Intro
                    </button>,
                    "href": "/landingpage",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": <a
                    href="/landingpage"
                  >
                    <button
                      id="skip-button"
                    >
                      Skip Intro
                    </button>
                  </a>,
                  "tag": 5,
                  "type": "a",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "firstEffect": null,
                "index": 1,
                "internalContextTag": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <button
                    id="skip-button"
                  >
                    Skip Intro
                  </button>,
                  "replace": false,
                  "to": "/landingpage",
                },
                "memoizedState": null,
                "nextEffect": null,
                "pendingProps": null,
                "pendingWorkPriority": 0,
                "ref": null,
                "return": FiberNode {
                  "_debugID": 25,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "_debugSource": Object {
                    "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                    "lineNumber": 7,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 26,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 24,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 23,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "memoizedState": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": [Circular],
                            "child": null,
                            "effectTag": 0,
                            "firstEffect": null,
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": null,
                            "memoizedState": null,
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 1,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": Object {
                              "callbackList": null,
                              "first": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                              "hasForceUpdate": false,
                              "isProcessing": false,
                              "last": Object {
                                "callback": null,
                                "isForced": false,
                                "isReplace": false,
                                "isTopLevelUnmount": false,
                                "next": null,
                                "partialState": Object {
                                  "element": <WrapperComponent
                                    Component={[Function]}
                                    context={
                                      Object {
                                        "router": Object {
                                          "history": Object {
                                            "_listeners": Array [],
                                            "_notifyListeners": [Function],
                                            "action": "POP",
                                            "createHref": [Function],
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          },
                                          "route": Object {
                                            "location": Object {
                                              "hash": "",
                                              "key": "5ji4pj",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "match": Object {
                                              "isExact": true,
                                              "params": Object {},
                                              "path": "/",
                                              "url": "/",
                                            },
                                          },
                                          "staticContext": undefined,
                                        },
                                      }
                                    }
                                    props={Object {}}
                                  />,
                                },
                                "priorityLevel": 1,
                              },
                            },
                          },
                          "child": [Circular],
                          "effectTag": 0,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": null,
                          "memoizedState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "router": Object {
                                    "history": Object {
                                      "_listeners": Array [],
                                      "_notifyListeners": [Function],
                                      "action": "POP",
                                      "createHref": [Function],
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    },
                                    "route": Object {
                                      "location": Object {
                                        "hash": "",
                                        "key": "5ji4pj",
                                        "pathname": "/",
                                        "search": "",
                                      },
                                      "match": Object {
                                        "isExact": true,
                                        "params": Object {},
                                        "path": "/",
                                        "url": "/",
                                      },
                                    },
                                    "staticContext": undefined,
                                  },
                                }
                              }
                              props={Object {}}
                            />,
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": WrapperComponent {
                          "__reactInternalMemoizedMergedChildContext": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "_reactInternalFiber": [Circular],
                          "_reactInternalInstance": Object {},
                          "context": Object {},
                          "props": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "refs": Object {},
                          "state": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "updater": Object {
                            "enqueueForceUpdate": [Function],
                            "enqueueReplaceState": [Function],
                            "enqueueSetState": [Function],
                            "isMounted": [Function],
                          },
                        },
                        "tag": 2,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": null,
                      "tag": 1,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": Object {
                      "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                      "lineNumber": 8,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 28,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": FiberNode {
                        "_debugID": 24,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": FiberNode {
                          "_debugID": 23,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 1,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <section
                                    id="video-container"
                                  >
                                    <video
                                      autoplay=""
                                      loop=""
                                    >
                                      <source
                                        src="goalscardcontainerhero.mp4"
                                        type="video/mp4"
                                      />
                                    </video>
                                    <a
                                      href="/landingpage"
                                    >
                                      <button
                                        id="skip-button"
                                      >
                                        Skip Intro
                                      </button>
                                    </a>
                                  </section>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "isScheduled": false,
                                "nextScheduledRoot": null,
                                "pendingContext": null,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "callbackList": null,
                                "first": Object {
                                  "callback": null,
                                  "isForced": false,
                                  "isReplace": false,
                                  "isTopLevelUnmount": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={
                                        Object {
                                          "router": Object {
                                            "history": Object {
                                              "_listeners": Array [],
                                              "_notifyListeners": [Function],
                                              "action": "POP",
                                              "createHref": [Function],
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            },
                                            "route": Object {
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "match": Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              },
                                            },
                                            "staticContext": undefined,
                                          },
                                        }
                                      }
                                      props={Object {}}
                                    />,
                                  },
                                  "priorityLevel": 1,
                                },
                                "hasForceUpdate": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "isForced": false,
                                  "isReplace": false,
                                  "isTopLevelUnmount": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={
                                        Object {
                                          "router": Object {
                                            "history": Object {
                                              "_listeners": Array [],
                                              "_notifyListeners": [Function],
                                              "action": "POP",
                                              "createHref": [Function],
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            },
                                            "route": Object {
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "match": Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              },
                                            },
                                            "staticContext": undefined,
                                          },
                                        }
                                      }
                                      props={Object {}}
                                    />,
                                  },
                                  "priorityLevel": 1,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              },
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              },
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "_debugSource": null,
                        "alternate": null,
                        "child": [Circular],
                        "effectTag": 1,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": FiberNode {
                          "_debugID": 23,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": null,
                          "child": [Circular],
                          "effectTag": 1,
                          "firstEffect": [Circular],
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": [Circular],
                          "memoizedProps": Object {
                            "Component": [Function],
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "props": Object {},
                          },
                          "memoizedState": Object {
                            "context": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "mount": true,
                            "props": Object {},
                          },
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 0,
                          "ref": null,
                          "return": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "alternate": FiberNode {
                              "_debugID": 21,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "alternate": [Circular],
                              "child": null,
                              "effectTag": 0,
                              "firstEffect": null,
                              "index": 0,
                              "internalContextTag": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": null,
                              "memoizedState": null,
                              "nextEffect": null,
                              "pendingProps": null,
                              "pendingWorkPriority": 1,
                              "ref": null,
                              "return": null,
                              "sibling": null,
                              "stateNode": Object {
                                "containerInfo": <div>
                                  <section
                                    id="video-container"
                                  >
                                    <video
                                      autoplay=""
                                      loop=""
                                    >
                                      <source
                                        src="goalscardcontainerhero.mp4"
                                        type="video/mp4"
                                      />
                                    </video>
                                    <a
                                      href="/landingpage"
                                    >
                                      <button
                                        id="skip-button"
                                      >
                                        Skip Intro
                                      </button>
                                    </a>
                                  </section>
                                </div>,
                                "context": Object {},
                                "current": [Circular],
                                "isScheduled": false,
                                "nextScheduledRoot": null,
                                "pendingContext": null,
                              },
                              "tag": 3,
                              "type": null,
                              "updateQueue": Object {
                                "callbackList": null,
                                "first": Object {
                                  "callback": null,
                                  "isForced": false,
                                  "isReplace": false,
                                  "isTopLevelUnmount": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={
                                        Object {
                                          "router": Object {
                                            "history": Object {
                                              "_listeners": Array [],
                                              "_notifyListeners": [Function],
                                              "action": "POP",
                                              "createHref": [Function],
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            },
                                            "route": Object {
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "match": Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              },
                                            },
                                            "staticContext": undefined,
                                          },
                                        }
                                      }
                                      props={Object {}}
                                    />,
                                  },
                                  "priorityLevel": 1,
                                },
                                "hasForceUpdate": false,
                                "isProcessing": false,
                                "last": Object {
                                  "callback": null,
                                  "isForced": false,
                                  "isReplace": false,
                                  "isTopLevelUnmount": false,
                                  "next": null,
                                  "partialState": Object {
                                    "element": <WrapperComponent
                                      Component={[Function]}
                                      context={
                                        Object {
                                          "router": Object {
                                            "history": Object {
                                              "_listeners": Array [],
                                              "_notifyListeners": [Function],
                                              "action": "POP",
                                              "createHref": [Function],
                                              "listen": [Function],
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "push": [Function],
                                              "replace": [Function],
                                            },
                                            "route": Object {
                                              "location": Object {
                                                "hash": "",
                                                "key": "5ji4pj",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                              "match": Object {
                                                "isExact": true,
                                                "params": Object {},
                                                "path": "/",
                                                "url": "/",
                                              },
                                            },
                                            "staticContext": undefined,
                                          },
                                        }
                                      }
                                      props={Object {}}
                                    />,
                                  },
                                  "priorityLevel": 1,
                                },
                              },
                            },
                            "child": [Circular],
                            "effectTag": 0,
                            "firstEffect": [Circular],
                            "index": 0,
                            "internalContextTag": 0,
                            "key": null,
                            "lastEffect": [Circular],
                            "memoizedProps": null,
                            "memoizedState": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "router": Object {
                                      "history": Object {
                                        "_listeners": Array [],
                                        "_notifyListeners": [Function],
                                        "action": "POP",
                                        "createHref": [Function],
                                        "listen": [Function],
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "push": [Function],
                                        "replace": [Function],
                                      },
                                      "route": Object {
                                        "location": Object {
                                          "hash": "",
                                          "key": "5ji4pj",
                                          "pathname": "/",
                                          "search": "",
                                        },
                                        "match": Object {
                                          "isExact": true,
                                          "params": Object {},
                                          "path": "/",
                                          "url": "/",
                                        },
                                      },
                                      "staticContext": undefined,
                                    },
                                  }
                                }
                                props={Object {}}
                              />,
                            },
                            "nextEffect": null,
                            "pendingProps": null,
                            "pendingWorkPriority": 0,
                            "ref": null,
                            "return": null,
                            "sibling": null,
                            "stateNode": Object {
                              "containerInfo": <div>
                                <section
                                  id="video-container"
                                >
                                  <video
                                    autoplay=""
                                    loop=""
                                  >
                                    <source
                                      src="goalscardcontainerhero.mp4"
                                      type="video/mp4"
                                    />
                                  </video>
                                  <a
                                    href="/landingpage"
                                  >
                                    <button
                                      id="skip-button"
                                    >
                                      Skip Intro
                                    </button>
                                  </a>
                                </section>
                              </div>,
                              "context": Object {},
                              "current": [Circular],
                              "isScheduled": false,
                              "nextScheduledRoot": null,
                              "pendingContext": null,
                            },
                            "tag": 3,
                            "type": null,
                            "updateQueue": null,
                          },
                          "sibling": null,
                          "stateNode": WrapperComponent {
                            "__reactInternalMemoizedMergedChildContext": Object {
                              "router": Object {
                                "history": Object {
                                  "_listeners": Array [],
                                  "_notifyListeners": [Function],
                                  "action": "POP",
                                  "createHref": [Function],
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                },
                                "route": Object {
                                  "location": Object {
                                    "hash": "",
                                    "key": "5ji4pj",
                                    "pathname": "/",
                                    "search": "",
                                  },
                                  "match": Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/",
                                    "url": "/",
                                  },
                                },
                                "staticContext": undefined,
                              },
                            },
                            "_reactInternalFiber": [Circular],
                            "_reactInternalInstance": Object {},
                            "context": Object {},
                            "props": Object {
                              "Component": [Function],
                              "context": Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              },
                              "props": Object {},
                            },
                            "refs": Object {},
                            "state": Object {
                              "context": Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              },
                              "mount": true,
                              "props": Object {},
                            },
                            "updater": Object {
                              "enqueueForceUpdate": [Function],
                              "enqueueReplaceState": [Function],
                              "enqueueSetState": [Function],
                              "isMounted": [Function],
                            },
                          },
                          "tag": 2,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "sibling": null,
                        "stateNode": null,
                        "tag": 1,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "_debugSource": Object {
                        "fileName": "/Users/hector/project-me/src/components/VideoIntro/VideoIntro.jsx",
                        "lineNumber": 9,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "firstEffect": null,
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "src": "goalscardcontainerhero.mp4",
                        "type": "video/mp4",
                      },
                      "memoizedState": null,
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": [Circular],
                      "sibling": null,
                      "stateNode": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "tag": 5,
                      "type": "source",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "firstEffect": null,
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "autoPlay": true,
                      "children": <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />,
                      "loop": true,
                      "muted": true,
                    },
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": [Circular],
                    "sibling": [Circular],
                    "stateNode": <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>,
                    "tag": 5,
                    "type": "video",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "firstEffect": null,
                  "index": 0,
                  "internalContextTag": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <video
                        autoPlay={true}
                        loop={true}
                        muted={true}
                      >
                        <source
                          src="goalscardcontainerhero.mp4"
                          type="video/mp4"
                        />
                      </video>,
                      <Link
                        replace={false}
                        to="/landingpage"
                      >
                        <button
                          id="skip-button"
                        >
                          Skip Intro
                        </button>
                      </Link>,
                    ],
                    "id": "video-container",
                  },
                  "memoizedState": null,
                  "nextEffect": null,
                  "pendingProps": null,
                  "pendingWorkPriority": 0,
                  "ref": null,
                  "return": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "_debugSource": null,
                    "alternate": null,
                    "child": [Circular],
                    "effectTag": 1,
                    "firstEffect": [Circular],
                    "index": 0,
                    "internalContextTag": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "nextEffect": null,
                    "pendingProps": null,
                    "pendingWorkPriority": 0,
                    "ref": null,
                    "return": FiberNode {
                      "_debugID": 23,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "alternate": null,
                      "child": [Circular],
                      "effectTag": 1,
                      "firstEffect": [Circular],
                      "index": 0,
                      "internalContextTag": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "props": Object {},
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "mount": true,
                        "props": Object {},
                      },
                      "nextEffect": null,
                      "pendingProps": null,
                      "pendingWorkPriority": 0,
                      "ref": null,
                      "return": FiberNode {
                        "_debugID": 21,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "alternate": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "alternate": [Circular],
                          "child": null,
                          "effectTag": 0,
                          "firstEffect": null,
                          "index": 0,
                          "internalContextTag": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "nextEffect": null,
                          "pendingProps": null,
                          "pendingWorkPriority": 1,
                          "ref": null,
                          "return": null,
                          "sibling": null,
                          "stateNode": Object {
                            "containerInfo": <div>
                              <section
                                id="video-container"
                              >
                                <video
                                  autoplay=""
                                  loop=""
                                >
                                  <source
                                    src="goalscardcontainerhero.mp4"
                                    type="video/mp4"
                                  />
                                </video>
                                <a
                                  href="/landingpage"
                                >
                                  <button
                                    id="skip-button"
                                  >
                                    Skip Intro
                                  </button>
                                </a>
                              </section>
                            </div>,
                            "context": Object {},
                            "current": [Circular],
                            "isScheduled": false,
                            "nextScheduledRoot": null,
                            "pendingContext": null,
                          },
                          "tag": 3,
                          "type": null,
                          "updateQueue": Object {
                            "callbackList": null,
                            "first": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                            "hasForceUpdate": false,
                            "isProcessing": false,
                            "last": Object {
                              "callback": null,
                              "isForced": false,
                              "isReplace": false,
                              "isTopLevelUnmount": false,
                              "next": null,
                              "partialState": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "router": Object {
                                        "history": Object {
                                          "_listeners": Array [],
                                          "_notifyListeners": [Function],
                                          "action": "POP",
                                          "createHref": [Function],
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        },
                                        "route": Object {
                                          "location": Object {
                                            "hash": "",
                                            "key": "5ji4pj",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "match": Object {
                                            "isExact": true,
                                            "params": Object {},
                                            "path": "/",
                                            "url": "/",
                                          },
                                        },
                                        "staticContext": undefined,
                                      },
                                    }
                                  }
                                  props={Object {}}
                                />,
                              },
                              "priorityLevel": 1,
                            },
                          },
                        },
                        "child": [Circular],
                        "effectTag": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "internalContextTag": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "router": Object {
                                  "history": Object {
                                    "_listeners": Array [],
                                    "_notifyListeners": [Function],
                                    "action": "POP",
                                    "createHref": [Function],
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  },
                                  "route": Object {
                                    "location": Object {
                                      "hash": "",
                                      "key": "5ji4pj",
                                      "pathname": "/",
                                      "search": "",
                                    },
                                    "match": Object {
                                      "isExact": true,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    },
                                  },
                                  "staticContext": undefined,
                                },
                              }
                            }
                            props={Object {}}
                          />,
                        },
                        "nextEffect": null,
                        "pendingProps": null,
                        "pendingWorkPriority": 0,
                        "ref": null,
                        "return": null,
                        "sibling": null,
                        "stateNode": Object {
                          "containerInfo": <div>
                            <section
                              id="video-container"
                            >
                              <video
                                autoplay=""
                                loop=""
                              >
                                <source
                                  src="goalscardcontainerhero.mp4"
                                  type="video/mp4"
                                />
                              </video>
                              <a
                                href="/landingpage"
                              >
                                <button
                                  id="skip-button"
                                >
                                  Skip Intro
                                </button>
                              </a>
                            </section>
                          </div>,
                          "context": Object {},
                          "current": [Circular],
                          "isScheduled": false,
                          "nextScheduledRoot": null,
                          "pendingContext": null,
                        },
                        "tag": 3,
                        "type": null,
                        "updateQueue": null,
                      },
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "router": Object {
                            "history": Object {
                              "_listeners": Array [],
                              "_notifyListeners": [Function],
                              "action": "POP",
                              "createHref": [Function],
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "route": Object {
                              "location": Object {
                                "hash": "",
                                "key": "5ji4pj",
                                "pathname": "/",
                                "search": "",
                              },
                              "match": Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              },
                            },
                            "staticContext": undefined,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "props": Object {},
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "router": Object {
                              "history": Object {
                                "_listeners": Array [],
                                "_notifyListeners": [Function],
                                "action": "POP",
                                "createHref": [Function],
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              },
                              "route": Object {
                                "location": Object {
                                  "hash": "",
                                  "key": "5ji4pj",
                                  "pathname": "/",
                                  "search": "",
                                },
                                "match": Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/",
                                  "url": "/",
                                },
                              },
                              "staticContext": undefined,
                            },
                          },
                          "mount": true,
                          "props": Object {},
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 2,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "sibling": null,
                  "stateNode": <section
                    id="video-container"
                  >
                    <video
                      autoplay=""
                      loop=""
                    >
                      <source
                        src="goalscardcontainerhero.mp4"
                        type="video/mp4"
                      />
                    </video>
                    <a
                      href="/landingpage"
                    >
                      <button
                        id="skip-button"
                      >
                        Skip Intro
                      </button>
                    </a>
                  </section>,
                  "tag": 5,
                  "type": "section",
                  "updateQueue": null,
                },
                "sibling": null,
                "stateNode": [Circular],
                "tag": 2,
                "type": [Function],
                "updateQueue": null,
              },
              "_reactInternalInstance": Object {},
              "context": Object {
                "router": Object {
                  "history": Object {
                    "_listeners": Array [],
                    "_notifyListeners": [Function],
                    "action": "POP",
                    "createHref": [Function],
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "route": Object {
                    "location": Object {
                      "hash": "",
                      "key": "5ji4pj",
                      "pathname": "/",
                      "search": "",
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                  },
                  "staticContext": undefined,
                },
              },
              "handleClick": [Function],
              "props": Object {
                "children": <button
                  id="skip-button"
                >
                  Skip Intro
                </button>,
                "replace": false,
                "to": "/landingpage",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "key": null,
            "nodeType": "class",
            "props": Object {
              "children": <button
                id="skip-button"
              >
                Skip Intro
              </button>,
              "replace": false,
              "to": "/landingpage",
            },
            "ref": null,
            "rendered": Object {
              "instance": <a
                href="/landingpage"
              >
                <button
                  id="skip-button"
                >
                  Skip Intro
                </button>
              </a>,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  id="skip-button"
                >
                  Skip Intro
                </button>,
                "href": "/landingpage",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <button
                    id="skip-button"
                  >
                    Skip Intro
                  </button>,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Skip Intro",
                    "id": "skip-button",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Skip Intro",
                  ],
                  "type": "button",
                },
              ],
              "type": "a",
            },
            "type": [Function],
          },
        ],
        "type": "section",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "childContextTypes": Object {
      "router": [Function],
    },
    "context": Object {
      "router": Object {
        "history": Object {
          "_listeners": Array [],
          "_notifyListeners": [Function],
          "action": "POP",
          "createHref": [Function],
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "5ji4pj",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        },
        "route": Object {
          "location": Object {
            "hash": "",
            "key": "5ji4pj",
            "pathname": "/",
            "search": "",
          },
          "match": Object {
            "isExact": true,
            "params": Object {},
            "path": "/",
            "url": "/",
          },
        },
        "staticContext": undefined,
      },
    },
  },
}
`;
